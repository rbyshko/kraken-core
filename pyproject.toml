[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry]
authors = ["Niklas Rosenstein <rosensteinniklas@gmail.com>"]
classifiers = []
description = ""
keywords = []
license = "MIT"
name = "kraken-core"
packages = [{include = "kraken/core", from = "src"}]
readme = "readme.md"
version = "0.11.2"

[tool.poetry.urls]
# "Bug Tracker" = ""
# Documentation = ""
# Homepage = ""
# Repository = ""

[tool.poetry.dependencies]
python = "^3.7"
deprecated = "^1.2.13"
dill = ">=0.3.5,<0.3.6"  # https://github.com/uqfoundation/dill/issues/332#issuecomment-1289537575
kraken-common = "^0.5.2"
networkx = "~2.6.3"  # Last version compatible with Python 3.7
nr-io-graphviz = "^0.1.1"
nr-stream = "^1.1.0"
pytest = { version = ">=6.0.0", optional = true }  # For the testing fixture provided by kraken.core
setuptools = ">=33.1.0"
termcolor = "^1.1.0"
typeapi = "^0.2.2"
typing-extensions = ">=3.10.0.2"

[tool.poetry.dev-dependencies]
black = "*"
flake8 = "*"
isort = "*"
mypy = "*"
pytest = "*"
types-Deprecated = "^1.2.9"
types-setuptools = "^57.4.18"
types-termcolor = "^1.1.5"

[tool.poetry.extras]
docs = ["mkdocs", "mkdocs-material", "novella==0.2.3", "pydoc-markdown==4.6.3"]
testing = ["pytest"]

[tool.poetry.plugins."pytest11"]
"kraken.core.test" = "kraken.core.test"

[tool.poetry.scripts]
kraken = "kraken.core.cli.main:main"

[tool.slap]
typed = true

[tool.slap.test]
black = "black --check src/ tests/ example/"
check = "slap check"
flake8 = "flake8 src/ tests/ example/"
isort = "isort --check-only src/ tests/ example/"
mypy = "dmypy run src/ tests/ example/"
pytest = "pytest tests/ -vv"

[tool.slap.run]
"docs:build" = "cd docs && novella --base-url kraken-core/"
"docs:dev" = "cd docs && novella --serve"
fmt = "black src/ example/ && isort src/ example/"

[tool.mypy]
explicit_package_bases = true
mypy_path = ["src"]
namespace_packages = true
pretty = true
python_version = "3.7"
show_error_codes = true
show_error_context = true
strict = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_errors = true
ignore_missing_imports = true
module = "networkx.*"

[tool.isort]
combine_as_imports = true
line_length = 120
profile = "black"

[tool.black]
line-length = 120

[tool.pytest.ini_options]
markers = [
    "integration",
]
